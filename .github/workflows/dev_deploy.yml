name: UMC Dev CI/CD

on:
  pull_request: # (1).PR이 올라오면 자동으로 실행
    types: [closed]
  workflow_dispatch: # (2).수동 실행도 가능하도록

jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경 설정 (ubuntu 20.04)
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop' # PR이 merge되고 base가 develop일 때만 실행

    steps:
      - name: Checkout # (4).코드 check out -> 빌드를 할 코드를 가져옴
        uses: actions/checkout@v2 # (4).코드 check out

      - name: Set up JDK 11 # (5).자바 설치
        uses: actions/setup-java@v3
        with:
          java-version: 11 # (5).자바 설치 (버전)
          distribution: 'adopt' # (5).자바 설치 (배포판 (어떤 툴))

      - name: Grant execute permission for gradlew
        run: chmod +x project/spring/gradlew
        shell: bash # (6).권한 부여

      - name: Build with Gradle
        run: project/spring//gradlew clean build -x test
        shell: bash # (7).build 시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (8).build 시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash # (9).확보한 시간 보여주기

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions-dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy # (10).배포
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: umc-spring-dev # 원하는 어플 이름
          environment_name: Umc-spring-dev-env # 원하는 환경 이름
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-1
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false